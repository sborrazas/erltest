---
- hosts: all
  vars:
    home_dir: "{{ ansible_env.HOME }}"
    # defaults file for erlang
    erlang_kerl_url: https://github.com/yrashk/kerl/raw/master/kerl
    erlang_kerl_bin: /usr/local/bin/kerl
    erlang_version: "19.3"
    erlang_install_to: /usr/lib/kerl/installs
    erlang_kerl_download_dir: /tmp/kerl/archives
    erlang_kerl_build_dir: /tmp/kerl/builds
    rebar_version: 2.6.2
    rebar_bin: "{{ home_dir }}/.bin/rebar3"
  tasks:
    # https://github.com/stwind/ansible-erlang
    - name: download kerl
      get_url:
        url: "{{erlang_kerl_url}}"
        dest: "{{erlang_kerl_bin}}"
        mode: 0777
      become: True

    - name: apt-get update
      apt:
        update_cache: True
        cache_valid_time: 86400
      become: True

    - name: install dependencies from apt
      apt:
        pkg: "{{item}}"
        state: present
      become: True
      with_items:
        - curl
        - libssl-dev
        - libncurses5-dev
        - build-essential

    - name: ensure ~/.kerlrc
      template:
        src: kerlrc.j2
        dest: "{{ ansible_env['HOME'] }}/.kerlrc"
        owner: "{{ ansible_env['USER'] }}"
        mode: 0744

    - name: kerl update release
      command: "{{erlang_kerl_bin}} update releases creates={{ansible_env['HOME']}}/.kerl/otp_releases"

    - name: build erlang
      command: "{{ erlang_kerl_bin }} build {{ erlang_version }} default"
      args:
        creates: "{{ erlang_kerl_build_dir }}/default"

    - name: kerl install default erlang
      command: sudo {{erlang_kerl_bin}} install default {{erlang_install_to}}/default
      args:
        creates: "{{erlang_install_to}}/default"

    - name: activate erlang for users
      lineinfile:
        line: "source {{erlang_install_to}}/default/activate"
        dest: /etc/bash.bashrc
        regexp: "{{erlang_install_to}}/default/activate"
        state: present
      become: True

    - name: compiled rebar3 downloaded
      get_url:
        url: https://s3.amazonaws.com/rebar3/rebar3
        dest: "{{ home_dir }}/.bin/rebar3"
        mode: 0755

    - name: Ubuntu Elisp PPA repo
      apt_repository:
        repo: "ppa:ubuntu-elisp/ppa"
        update_cache: True
      when: ansible_distribution == "Ubuntu"
      become: True

    - name: Install Emacs apt package
      apt:
        pkg: emacs-snapshot
        state: latest
      when: ansible_distribution == "Ubuntu"
      become: True
